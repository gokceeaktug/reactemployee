{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ggokc\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\react\\\\react-projects\\\\employee-management-system\\\\src\\\\Page\\\\Dashboard\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport Header from './Header';\nimport List from './List';\nimport Add from './Add';\nimport Edit from './Edit';\nimport { employeesData } from '../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [employees, setEmployees] = useState(employeesData);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEdit = id => {\n    const [employee] = employees.filter(employee => employee.id === id);\n    setSelectedEmployee(employee);\n    setIsEditing(true);\n  };\n\n  const handleDelete = id => {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Emin misiniz?',\n      showCancelButton: true,\n      confirmButtonText: 'Silindi',\n      cancelButtonText: 'Geri dön!'\n    }).then(result => {\n      if (result.value) {\n        const [employee] = employees.filter(employee => employee.id === id);\n        Swal.fire({\n          icon: 'success',\n          title: 'Sil!',\n          text: `${employee.firstName} ${employee.lastName} silindi.`,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setEmployees(employees.filter(employee => employee.id !== id));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isAdding && !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setIsAdding: setIsAdding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        employees: employees,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), isAdding && /*#__PURE__*/_jsxDEV(Add, {\n      employees: employees,\n      setEmployees: setEmployees,\n      setIsAdding: setIsAdding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Edit, {\n      employees: employees,\n      selectedEmployee: selectedEmployee,\n      setEmployees: setEmployees,\n      setIsEditing: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"RF2OJfX+XCyxy5jCkfqraOsMGQw=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/ggokc/OneDrive/Masaüstü/react/react-projects/employee-management-system/src/Page/Dashboard/index.js"],"names":["React","useState","Swal","Header","List","Add","Edit","employeesData","Dashboard","employees","setEmployees","selectedEmployee","setSelectedEmployee","isAdding","setIsAdding","isEditing","setIsEditing","handleEdit","id","employee","filter","handleDelete","fire","icon","title","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","text","firstName","lastName","showConfirmButton","timer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,aAAT,QAA8B,YAA9B;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACM,aAAD,CAA1C;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMgB,UAAU,GAAIC,EAAD,IAAQ;AACvB,UAAM,CAACC,QAAD,IAAaV,SAAS,CAACW,MAAV,CAAiBD,QAAQ,IAAIA,QAAQ,CAACD,EAAT,KAAgBA,EAA7C,CAAnB;AAEAN,IAAAA,mBAAmB,CAACO,QAAD,CAAnB;AACAH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GALD;;AAOA,QAAMK,YAAY,GAAIH,EAAD,IAAQ;AACzBhB,IAAAA,IAAI,CAACoB,IAAL,CAAU;AACNC,MAAAA,IAAI,EAAE,SADA;AAENC,MAAAA,KAAK,EAAE,eAFD;AAGNC,MAAAA,gBAAgB,EAAE,IAHZ;AAINC,MAAAA,iBAAiB,EAAE,SAJb;AAKNC,MAAAA,gBAAgB,EAAE;AALZ,KAAV,EAMGC,IANH,CAMQC,MAAM,IAAI;AACd,UAAIA,MAAM,CAACC,KAAX,EAAkB;AACd,cAAM,CAACX,QAAD,IAAaV,SAAS,CAACW,MAAV,CAAiBD,QAAQ,IAAIA,QAAQ,CAACD,EAAT,KAAgBA,EAA7C,CAAnB;AAEAhB,QAAAA,IAAI,CAACoB,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,KAAK,EAAE,MAFD;AAGNO,UAAAA,IAAI,EAAG,GAAEZ,QAAQ,CAACa,SAAU,IAAGb,QAAQ,CAACc,QAAS,WAH3C;AAINC,UAAAA,iBAAiB,EAAE,KAJb;AAKNC,UAAAA,KAAK,EAAE;AALD,SAAV;AAQAzB,QAAAA,YAAY,CAACD,SAAS,CAACW,MAAV,CAAiBD,QAAQ,IAAIA,QAAQ,CAACD,EAAT,KAAgBA,EAA7C,CAAD,CAAZ;AACH;AACJ,KApBD;AAqBH,GAtBD;;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eAEK,CAACL,QAAD,IAAa,CAACE,SAAd,iBACG;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,WAAW,EAAED;AADjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AACI,QAAA,SAAS,EAAEL,SADf;AAEI,QAAA,UAAU,EAAEQ,UAFhB;AAGI,QAAA,YAAY,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBAHR,EAeKR,QAAQ,iBACL,QAAC,GAAD;AACI,MAAA,SAAS,EAAEJ,SADf;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAGI,MAAA,WAAW,EAAEI;AAHjB;AAAA;AAAA;AAAA;AAAA,YAhBR,EAuBKC,SAAS,iBACN,QAAC,IAAD;AACI,MAAA,SAAS,EAAEN,SADf;AAEI,MAAA,gBAAgB,EAAEE,gBAFtB;AAGI,MAAA,YAAY,EAAED,YAHlB;AAII,MAAA,YAAY,EAAEM;AAJlB;AAAA;AAAA;AAAA;AAAA,YAxBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAzEQR,S;;KAAAA,S;AA2ET,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Header from './Header';\r\nimport List from './List';\r\nimport Add from './Add';\r\nimport Edit from './Edit';\r\n\r\nimport { employeesData } from '../../data';\r\n\r\nfunction Dashboard() {\r\n\r\n    const [employees, setEmployees] = useState(employeesData);\r\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n    const [isAdding, setIsAdding] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const handleEdit = (id) => {\r\n        const [employee] = employees.filter(employee => employee.id === id);\r\n\r\n        setSelectedEmployee(employee);\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        Swal.fire({\r\n            icon: 'warning',\r\n            title: 'Emin misiniz?',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Silindi',\r\n            cancelButtonText: 'Geri dön!',\r\n        }).then(result => {\r\n            if (result.value) {\r\n                const [employee] = employees.filter(employee => employee.id === id);\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Sil!',\r\n                    text: `${employee.firstName} ${employee.lastName} silindi.`,\r\n                    showConfirmButton: false,\r\n                    timer: 1500,\r\n                });\r\n\r\n                setEmployees(employees.filter(employee => employee.id !== id));\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            {/* List */}\r\n            {!isAdding && !isEditing && (\r\n                <>\r\n                    <Header\r\n                        setIsAdding={setIsAdding}\r\n                    />\r\n                    <List\r\n                        employees={employees}\r\n                        handleEdit={handleEdit}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                </>\r\n            )}\r\n            {/* Ekle */}\r\n            {isAdding && (\r\n                <Add\r\n                    employees={employees}\r\n                    setEmployees={setEmployees}\r\n                    setIsAdding={setIsAdding}\r\n                />\r\n            )}\r\n            {/* Güncelle */}\r\n            {isEditing && (\r\n                <Edit\r\n                    employees={employees}\r\n                    selectedEmployee={selectedEmployee}\r\n                    setEmployees={setEmployees}\r\n                    setIsEditing={setIsEditing}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}